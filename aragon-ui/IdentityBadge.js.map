{"version":3,"file":"IdentityBadge.js","sources":["../src/components/IdentityBadge/IdentityBadge.js"],"sourcesContent":["import React, { useCallback, useRef, useState } from 'react'\nimport PropTypes from 'prop-types'\nimport { GU, textStyle } from '../../style'\nimport { isAddress, shortenAddress, warnOnce } from '../../utils'\nimport BadgeBase from '../BadgeBase/BadgeBase'\nimport BadgePopoverActionType from '../BadgeBase/BadgePopoverActionType'\nimport EthIdenticon from '../EthIdenticon/EthIdenticon'\nimport IdentityBadgePopover from './IdentityBadgePopover'\n\nconst IdentityBadge = React.memo(function IdentityBadge({\n  badgeOnly,\n  compact,\n  connectedAccount,\n  entity,\n  explorerProvider,\n  label,\n  labelStyle,\n  networkType,\n  popoverAction,\n  popoverTitle,\n  shorten,\n\n  // Deprecated\n  customLabel,\n  fontSize,\n\n  ...props\n}) {\n  if (customLabel) {\n    warnOnce(\n      'IdentityBadge:customLabel',\n      'The “customLabel” prop is deprecated. Please use “label” instead.'\n    )\n    label = label || customLabel\n  }\n  if (fontSize) {\n    warnOnce(\n      'IdentityBadge:fontSize',\n      'The “fontSize” prop is deprecated. Please use “labelStyle” to style the label instead.'\n    )\n  }\n\n  const badgeRef = useRef(null)\n  const [opened, setOpened] = useState(false)\n  const handleClose = useCallback(() => setOpened(false), [])\n  const handleOpen = useCallback(() => setOpened(true), [])\n\n  const address = isAddress(entity) ? entity : null\n  const displayLabel =\n    label || (address && shorten ? shortenAddress(address) : entity)\n\n  return (\n    <BadgeBase\n      badgeRef={badgeRef}\n      compact={compact}\n      disabled={badgeOnly}\n      icon={\n        address && (\n          <div\n            css={`\n              display: block;\n              margin-right: ${1 * GU}px;\n              ${compact\n                ? `\n                  position: relative;\n                  top: -1px;\n                `\n                : ''};\n            `}\n          >\n            <EthIdenticon\n              scale={compact ? 0.75 : 1}\n              radius={compact ? 2 : 0}\n              address={address}\n            />\n          </div>\n        )\n      }\n      label={displayLabel}\n      labelStyle={`\n        ${!label && address ? textStyle('address1') : ''}\n        ${labelStyle}\n      `}\n      onClick={address ? handleOpen : undefined}\n      title={address}\n      {...props}\n    >\n      {popoverDisabled =>\n        !popoverDisabled &&\n        address && (\n          <IdentityBadgePopover\n            address={address}\n            connectedAccount={connectedAccount}\n            explorerProvider={explorerProvider}\n            networkType={networkType}\n            onClose={handleClose}\n            opener={badgeRef.current}\n            popoverAction={popoverAction}\n            title={popoverTitle}\n            visible={opened}\n          />\n        )\n      }\n    </BadgeBase>\n  )\n})\n\nIdentityBadge.propTypes = {\n  badgeOnly: PropTypes.bool,\n  compact: PropTypes.bool,\n  connectedAccount: PropTypes.bool,\n  entity: PropTypes.string,\n  explorerProvider: PropTypes.string,\n  label: PropTypes.string,\n  labelStyle: PropTypes.string,\n  networkType: PropTypes.string,\n  popoverAction: BadgePopoverActionType,\n  popoverTitle: PropTypes.node,\n  shorten: PropTypes.bool,\n\n  // Deprecated\n  customLabel: PropTypes.string,\n  fontSize: PropTypes.string,\n}\n\nIdentityBadge.defaultProps = {\n  entity: '',\n  labelStyle: '',\n  networkType: 'main',\n  shorten: true,\n}\n\nexport default IdentityBadge\n"],"names":["IdentityBadge","React","memo","badgeOnly","compact","connectedAccount","entity","explorerProvider","label","labelStyle","networkType","popoverAction","popoverTitle","shorten","customLabel","fontSize","props","warnOnce","badgeRef","useRef","opened","setOpened","useState","handleClose","useCallback","handleOpen","address","isAddress","displayLabel","shortenAddress","BadgeBase","_extends","GU","EthIdenticon","textStyle","undefined","popoverDisabled","IdentityBadgePopover","current","propTypes","PropTypes","bool","string","BadgePopoverActionType","node","defaultProps"],"mappings":"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"}