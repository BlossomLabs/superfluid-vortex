{"version":3,"file":"RedrawFromDate.js","sources":["../../../../../src/providers/RedrawFromDate/RedrawFromDate.js"],"sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport getDisplayName from 'react-display-name'\nimport dayjs from 'dayjs'\nimport { difference } from '../../utils/date'\n\n// Render prop component for re-rendering based on a given date. Automatically\n// adjusts the re-render timer to be one second, minute, or hour based on the\n// fromDate prop.\n// For a discussion on pitfalls, see\n// https://gist.github.com/staltz/08bf613199092eeb41ac8137d51eb5e6\n\nconst EVERY_SECOND = 1000\nconst EVERY_MINUTE = EVERY_SECOND * 60\nconst EVERY_HOUR = EVERY_MINUTE * 60\n\nconst getRedrawTime = fromDate => {\n  const { days, hours, minutes } = difference(new Date(), fromDate)\n  return hours || days ? EVERY_HOUR : minutes > 1 ? EVERY_MINUTE : EVERY_SECOND\n}\n\nclass RedrawFromDate extends React.Component {\n  static propTypes = {\n    children: PropTypes.func.isRequired,\n    fromDate: PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.number,\n      PropTypes.instanceOf(Date),\n    ]).isRequired,\n  }\n  state = {\n    redrawTime: EVERY_HOUR,\n    lastDraw: -1,\n  }\n  componentDidMount() {\n    const { fromDate } = this.props\n    if (fromDate) {\n      this.restartDrawInterval(getRedrawTime(fromDate))\n    }\n  }\n  componentWillReceiveProps({ fromDate }) {\n    if (!fromDate && this.props.fromDate) {\n      this.clearInterval()\n    } else if (!dayjs(fromDate).isSame(this.props.fromDate)) {\n      this.restartDrawInterval(getRedrawTime(this.props.fromDate))\n    }\n  }\n  componentWillUnmount() {\n    this.clearInterval()\n  }\n  clearInterval = () => {\n    this.interval && clearInterval(this.interval)\n  }\n  restartDrawInterval = redrawTime => {\n    this.clearInterval()\n\n    this.interval = setInterval(() => {\n      this.setState({ lastDraw: Date.now() })\n\n      const newRedrawTime = getRedrawTime(this.props.fromDate)\n      if (newRedrawTime !== redrawTime) {\n        this.restartDrawInterval(newRedrawTime)\n      }\n    }, redrawTime)\n  }\n  render() {\n    return this.props.children()\n  }\n}\n\nconst hocWrap = Component => {\n  const HOC = props => (\n    <RedrawFromDate fromDate={props.fromDate}>\n      {() => <Component {...props} />}\n    </RedrawFromDate>\n  )\n  HOC.propTypes = {\n    fromDate: RedrawFromDate.propTypes.fromDate,\n  }\n  HOC.displayName = `RedrawFromDate(${getDisplayName(Component)})`\n  return HOC\n}\n\nRedrawFromDate.hocWrap = hocWrap\n\nexport { RedrawFromDate, hocWrap }\nexport default RedrawFromDate\n"],"names":["EVERY_SECOND","EVERY_MINUTE","EVERY_HOUR","getRedrawTime","fromDate","days","hours","minutes","difference","Date","RedrawFromDate","React","Component","redrawTime","lastDraw","interval","clearInterval","setInterval","setState","now","newRedrawTime","props","restartDrawInterval","componentDidMount","componentWillReceiveProps","dayjs","isSame","componentWillUnmount","render","children","PropTypes","func","isRequired","oneOfType","string","number","instanceOf","hocWrap","HOC","propTypes","displayName","getDisplayName"],"mappings":"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"}