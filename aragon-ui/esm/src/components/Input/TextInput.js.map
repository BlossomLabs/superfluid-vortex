{"version":3,"file":"TextInput.js","sources":["../../../../../src/components/Input/TextInput.js"],"sourcesContent":["import React, { useCallback } from 'react'\nimport PropTypes from 'prop-types'\nimport { useTheme } from '../../theme'\nimport { warnOnce } from '../../utils'\nimport { textStyle, GU, MEDIUM_RADIUS } from '../../style'\n\n// Simple text input\nconst TextInput = React.forwardRef(\n  ({ autofocus, multiline, type, ...props }, ref) => {\n    const theme = useTheme()\n\n    const handleRef = useCallback(\n      element => {\n        if (ref) {\n          ref.current = element\n        }\n        if (autofocus && element) {\n          element.focus()\n        }\n      },\n      [autofocus, ref]\n    )\n\n    return (\n      <input\n        ref={handleRef}\n        as={multiline ? 'textarea' : 'input'}\n        type={multiline ? undefined : type}\n        {...props}\n        css={`\n          width: ${({ wide }) => (wide ? '100%' : 'auto')};\n          height: ${5 * GU}px;\n          padding: 0 ${1.5 * GU}px;\n          background: ${theme.surface};\n          border: 1px solid ${theme.border};\n          color: ${theme.surfaceContent};\n          border-radius: ${MEDIUM_RADIUS}px;\n          appearance: none;\n          ${textStyle('body3')};\n\n          ${multiline\n            ? `\n              height: auto;\n              padding: ${1 * GU}px ${1.5 * GU}px;\n              resize: vertical;\n            `\n            : ''}\n\n          &:focus {\n            outline: none;\n            border-color: ${theme.selected};\n          }\n\n          &:read-only {\n            color: ${theme.hint};\n            border-color: ${theme.border};\n          }\n\n          &::placeholder {\n            color: ${theme.hint};\n            opacity: 1;\n          }\n\n          &:invalid {\n            box-shadow: none;\n          }\n        `}\n      />\n    )\n  }\n)\n\nTextInput.propTypes = {\n  autofocus: PropTypes.bool,\n  multiline: PropTypes.bool,\n  required: PropTypes.bool,\n  type: PropTypes.string,\n}\n\nTextInput.defaultProps = {\n  autofocus: false,\n  multiline: false,\n  required: false,\n  type: 'text',\n}\n\n// Text input wrapped to allow adornments\nconst WrapperTextInput = React.forwardRef(\n  (\n    {\n      adornment,\n      adornmentPosition,\n      adornmentSettings: {\n        width: adornmentWidth = 36,\n        padding: adornmentPadding = 4,\n      },\n      ...props\n    },\n    ref\n  ) => {\n    const theme = useTheme()\n    if (!adornment) {\n      return <TextInput ref={ref} {...props} />\n    }\n    return (\n      <div\n        css={`\n          display: inline-flex;\n          position: relative;\n          width: ${props.wide ? '100%' : 'max-content'};\n        `}\n      >\n        <TextInput\n          ref={ref}\n          css={`\n            ${adornmentPosition === 'end'\n              ? 'padding-right'\n              : 'padding-left'}: ${adornmentWidth - adornmentPadding * 2}px;\n          `}\n          {...props}\n        />\n        <div\n          css={`\n            position: absolute;\n            top: 0;\n            bottom: 0;\n            height: 100%;\n            ${adornmentPosition === 'end'\n              ? 'right'\n              : 'left'}: ${adornmentPadding}px;\n            display: flex;\n            align-items: center;\n            justify-content: center;\n            color: ${theme.surfaceContentSecondary};\n          `}\n        >\n          {adornment}\n        </div>\n      </div>\n    )\n  }\n)\n\nWrapperTextInput.propTypes = {\n  ...TextInput.propTypes,\n  adornment: PropTypes.node,\n  adornmentPosition: PropTypes.oneOf(['start', 'end']),\n  adornmentSettings: PropTypes.shape({\n    width: PropTypes.number,\n    padding: PropTypes.number,\n  }),\n}\n\nWrapperTextInput.defaultProps = {\n  ...TextInput.defaultProps,\n  adornment: null,\n  adornmentPosition: 'start',\n  adornmentSettings: {},\n}\n\n// <input type=number> (only for compat)\nfunction TextInputNumber(props) {\n  warnOnce(\n    'TextInputNumber',\n    'TextInputNumber is deprecated. Please use TextInput instead.'\n  )\n  return <TextInput type=\"number\" {...props} />\n}\n\n// Multiline input (textarea element)\nfunction TextInputMultiline(props) {\n  return <TextInput multiline {...props} />\n}\n\nTextInputMultiline.propTypes = {\n  required: PropTypes.bool,\n}\nTextInputMultiline.defaultProps = {\n  required: false,\n}\n\nWrapperTextInput.Number = TextInputNumber\nWrapperTextInput.Multiline = TextInputMultiline\n\nexport default WrapperTextInput\n"],"names":["TextInput","React","forwardRef","ref","autofocus","multiline","type","props","theme","useTheme","handleRef","useCallback","element","current","focus","undefined","GU","surface","border","surfaceContent","textStyle","selected","hint","propTypes","PropTypes","bool","required","string","defaultProps","WrapperTextInput","adornment","adornmentPosition","adornmentSettings","width","adornmentWidth","padding","adornmentPadding","wide","surfaceContentSecondary","node","oneOf","shape","number","TextInputNumber","warnOnce","TextInputMultiline","Number","Multiline","MEDIUM_RADIUS"],"mappings":"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"}