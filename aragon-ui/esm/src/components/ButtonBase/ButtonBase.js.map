{"version":3,"file":"ButtonBase.js","sources":["../../../../../src/components/ButtonBase/ButtonBase.js"],"sourcesContent":["import React, { useCallback } from 'react'\nimport PropTypes from 'prop-types'\nimport FocusVisible from '../FocusVisible/FocusVisible'\nimport { useTheme } from '../../theme'\nimport { MEDIUM_RADIUS, textStyle } from '../../style'\nimport { warnOnce, KEY_ENTER, unselectable } from '../../utils'\n\nfunction getElementProps({ element, href, disabled, external }) {\n  // <button> (handles key events)\n  if (element === 'button') {\n    return [\n      'button',\n      {\n        type: 'button',\n        disabled,\n      },\n    ]\n  }\n\n  // <a href=\"\"> (handles key events)\n  if (element === 'a' && href) {\n    return [\n      'anchor',\n      disabled\n        ? {}\n        : {\n            href: href,\n            rel: 'noopener noreferrer',\n            ...(external ? { target: '_blank' } : {}),\n          },\n    ]\n  }\n\n  // <a> or <div> (doesnâ€™t handle key events)\n  return [\n    'basic',\n    {\n      role: 'button',\n      tabIndex: disabled ? '-1' : '0',\n    },\n  ]\n}\n\nfunction ButtonBase({\n  disabled,\n  element,\n  external,\n  focusRingRadius,\n  focusRingSpacing,\n  focusVisible,\n  href,\n  innerRef,\n  onClick,\n  onKeyDown,\n  showFocusRing,\n  ...props\n}) {\n  const theme = useTheme()\n\n  // `external` defaults to `true` if `href` is present, `false` otherwise.\n  if (external === undefined) {\n    external = Boolean(href)\n  }\n\n  if (typeof focusRingSpacing === 'number') {\n    focusRingSpacing = [focusRingSpacing, focusRingSpacing]\n  }\n\n  if (!element) {\n    element = href ? 'a' : 'button'\n  }\n\n  const [elementType, elementProps] = getElementProps({\n    element,\n    href,\n    disabled,\n    external,\n  })\n\n  const handleKeyDown = useCallback(\n    event => {\n      // Only applies to cases where the enter key is not handled already\n      if (elementType === 'basic' && event.keyCode === KEY_ENTER && onClick) {\n        onClick()\n      }\n\n      // Pass the event up\n      if (onKeyDown) {\n        onKeyDown(event)\n      }\n    },\n    [elementType, onClick, onKeyDown]\n  )\n\n  return (\n    <button\n      as={element}\n      ref={innerRef}\n      onClick={disabled ? undefined : onClick}\n      onKeyDown={disabled ? undefined : handleKeyDown}\n      {...elementProps}\n      {...props}\n      css={`\n        position: relative;\n        display: inline-block;\n        padding: 0;\n        white-space: nowrap;\n        ${textStyle('body3')};\n        text-decoration: none;\n        text-align: center;\n        background: none;\n        border-radius: ${MEDIUM_RADIUS}px;\n        border: 0;\n        outline: 0;\n        cursor: ${disabled ? 'default' : 'pointer'};\n        ${elementType === 'basic' ? unselectable : ''};\n\n        &::-moz-focus-inner {\n          border: 0;\n        }\n\n        &:focus:after {\n          content: '';\n          display: ${focusVisible && showFocusRing ? 'block' : 'none'};\n          position: absolute;\n          top: ${-focusRingSpacing[1]}px;\n          left: ${-focusRingSpacing[0]}px;\n          right: ${-focusRingSpacing[0]}px;\n          bottom: ${-focusRingSpacing[1]}px;\n          border-radius: ${focusRingRadius}px;\n          border: 2px solid ${theme.focus};\n        }\n      `}\n    />\n  )\n}\n\nButtonBase.propTypes = {\n  disabled: PropTypes.bool,\n  external: PropTypes.bool,\n  focusRingRadius: PropTypes.number,\n  focusRingSpacing: PropTypes.oneOfType([\n    PropTypes.number,\n    PropTypes.arrayOf(PropTypes.number),\n  ]),\n  focusVisible: PropTypes.bool,\n  href: PropTypes.string,\n  innerRef: PropTypes.any,\n  onClick: PropTypes.func,\n  onKeyDown: PropTypes.func,\n  showFocusRing: PropTypes.bool,\n  element: PropTypes.oneOf(['button', 'div', 'a']),\n}\n\nButtonBase.defaultProps = {\n  disabled: false,\n  focusRingRadius: 0,\n  focusRingSpacing: 0,\n  showFocusRing: true,\n}\n\nconst ButtonBaseWithFocus = React.forwardRef(\n  ({ onFocus: onFocusProp, ...props }, ref) => {\n    return (\n      <FocusVisible>\n        {({ focusVisible, onFocus }) => {\n          // support external onFocus handlers\n          const handleFocus = event => {\n            if (onFocusProp) {\n              onFocusProp(event)\n            }\n            onFocus(event)\n          }\n\n          return (\n            <ButtonBase\n              innerRef={ref}\n              onFocus={handleFocus}\n              focusVisible={focusVisible}\n              {...props}\n            />\n          )\n        }}\n      </FocusVisible>\n    )\n  }\n)\n\nButtonBaseWithFocus.propTypes = {\n  ...ButtonBase.propTypes,\n  onFocus: PropTypes.func,\n}\n\nconst LinkBase = React.forwardRef((props, ref) => {\n  warnOnce(\n    'LinkBase',\n    'LinkBase is deprecated: please use ButtonBase with a href prop instead.'\n  )\n  return <ButtonBase ref={ref} {...props} />\n})\n\nexport { LinkBase }\nexport default ButtonBaseWithFocus\n"],"names":["getElementProps","element","href","disabled","external","type","rel","target","role","tabIndex","ButtonBase","focusRingRadius","focusRingSpacing","focusVisible","innerRef","onClick","onKeyDown","showFocusRing","props","theme","useTheme","undefined","Boolean","elementType","elementProps","handleKeyDown","useCallback","event","keyCode","KEY_ENTER","React","textStyle","unselectable","focus","propTypes","PropTypes","bool","number","oneOfType","arrayOf","string","any","func","oneOf","defaultProps","ButtonBaseWithFocus","forwardRef","ref","onFocus","onFocusProp","handleFocus","LinkBase","warnOnce","MEDIUM_RADIUS"],"mappings":"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"}