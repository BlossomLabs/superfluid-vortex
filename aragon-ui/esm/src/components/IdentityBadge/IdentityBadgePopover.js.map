{"version":3,"file":"IdentityBadgePopover.js","sources":["../../../../../src/components/IdentityBadge/IdentityBadgePopover.js"],"sourcesContent":["import React from 'react'\nimport PropTypes from '../../proptypes'\nimport { GU } from '../../style'\nimport { blockExplorerUrl } from '../../utils'\nimport AddressField from '../AddressField/AddressField'\nimport BadgePopoverBase from '../BadgeBase/BadgePopoverBase'\nimport BadgePopoverActionType from '../BadgeBase/BadgePopoverActionType'\nimport Link from '../Link/Link'\nimport Tag from '../Tag/Tag'\nimport { capitalize } from '../../utils/characters'\n\nconst IdentityBadgePopover = React.memo(function IdentityBadgePopover({\n  address,\n  connectedAccount,\n  explorerProvider,\n  networkType,\n  onClose,\n  opener,\n  popoverAction,\n  title,\n  visible,\n}) {\n  const etherscanUrl = blockExplorerUrl('address', address, {\n    networkType,\n    provider: explorerProvider,\n  })\n\n  return (\n    <BadgePopoverBase\n      addressField={<AddressField address={address} />}\n      link={\n        etherscanUrl && (\n          <Link href={etherscanUrl}>\n            See on {capitalize(explorerProvider ?? 'blockscout')}\n          </Link>\n        )\n      }\n      onClose={onClose}\n      opener={opener}\n      popoverAction={popoverAction}\n      title={title}\n      titleTag={\n        connectedAccount && (\n          <Tag\n            css={`\n              margin-left: ${1 * GU}px;\n            `}\n            title=\"This is your Ethereum address\"\n          >\n            you\n          </Tag>\n        )\n      }\n      visible={visible}\n    />\n  )\n})\nIdentityBadgePopover.propTypes = {\n  address: PropTypes.string,\n  connectedAccount: PropTypes.bool,\n  explorerProvider: PropTypes.string,\n  networkType: PropTypes.string,\n  onClose: PropTypes.func,\n  opener: PropTypes._element,\n  popoverAction: BadgePopoverActionType,\n  title: PropTypes.node,\n  visible: PropTypes.bool,\n}\nIdentityBadgePopover.defaultProps = {\n  title: 'Address',\n}\n\nexport default IdentityBadgePopover\n"],"names":["IdentityBadgePopover","React","memo","address","connectedAccount","explorerProvider","networkType","onClose","opener","popoverAction","title","visible","etherscanUrl","blockExplorerUrl","provider","capitalize","GU","propTypes","PropTypes","string","bool","func","_element","BadgePopoverActionType","node","defaultProps"],"mappings":";;;;;;;;;;;;AAWMA,MAAAA,oBAAoB,gBAAGC,cAAK,CAACC,IAAN,CAAW,SAASF,oBAAT,CAUrC,IAAA,EAAA;AAAA,EAVmE,IAAA;AACpEG,IAAAA,OADoE;AAEpEC,IAAAA,gBAFoE;AAGpEC,IAAAA,gBAHoE;AAIpEC,IAAAA,WAJoE;AAKpEC,IAAAA,OALoE;AAMpEC,IAAAA,MANoE;AAOpEC,IAAAA,aAPoE;AAQpEC,IAAAA,KARoE;AASpEC,IAAAA,OAAAA;AAToE,GAUnE,GAAA,IAAA,CAAA;AACD,EAAA,MAAMC,YAAY,GAAGC,gBAAgB,CAAC,SAAD,EAAYV,OAAZ,EAAqB;AACxDG,IAAAA,WADwD;AAExDQ,IAAAA,QAAQ,EAAET,gBAAAA;AAF8C,GAArB,CAArC,CAAA;AAKA,EAAA,oBACEJ,6BAAC,gBAAD,EAAA;AACE,IAAA,YAAY,eAAEA,cAAA,CAAA,aAAA,CAAC,YAAD,EAAA;AAAc,MAAA,OAAO,EAAEE,OAAAA;AAAvB,KADhB,CAAA;AAEE,IAAA,IAAI,EACFS,YAAY,iBACVX,6BAAC,IAAD,EAAA;AAAM,MAAA,IAAI,EAAEW,YAAAA;AAAZ,KACUG,EAAAA,SAAAA,EAAAA,UAAU,CAACV,gBAAD,KAACA,IAAAA,IAAAA,gBAAD,cAACA,gBAAD,GAAqB,YAArB,CADpB,CAJN;AASE,IAAA,OAAO,EAAEE,OATX;AAUE,IAAA,MAAM,EAAEC,MAVV;AAWE,IAAA,aAAa,EAAEC,aAXjB;AAYE,IAAA,KAAK,EAAEC,KAZT;AAaE,IAAA,QAAQ,EACNN,gBAAgB,iBACdH,cAAA,CAAA,aAAA,CAAA,UAAA,EAAA;AAIE,MAAA,KAAK,EAAC,+BAJR;AAAA,MAAA,KAAA,EAEmB,CAAIe,GAAAA,EAAAA;AAFvB,KAfN,EAAA,KAAA,CAAA;AAyBE,IAAA,OAAO,EAAEL,OAAAA;AAzBX,GADF,CAAA,CAAA;AA6BD,CA7C4B,EAA7B;AA8CAX,oBAAoB,CAACiB,SAArB,GAAiC;AAC/Bd,EAAAA,OAAO,EAAEe,SAAS,CAACC,MADY;AAE/Bf,EAAAA,gBAAgB,EAAEc,SAAS,CAACE,IAFG;AAG/Bf,EAAAA,gBAAgB,EAAEa,SAAS,CAACC,MAHG;AAI/Bb,EAAAA,WAAW,EAAEY,SAAS,CAACC,MAJQ;AAK/BZ,EAAAA,OAAO,EAAEW,SAAS,CAACG,IALY;AAM/Bb,EAAAA,MAAM,EAAEU,SAAS,CAACI,QANa;AAO/Bb,EAAAA,aAAa,EAAEc,sBAPgB;AAQ/Bb,EAAAA,KAAK,EAAEQ,SAAS,CAACM,IARc;AAS/Bb,EAAAA,OAAO,EAAEO,SAAS,CAACE,IAAAA;AATY,CAAjC,CAAA;AAWApB,oBAAoB,CAACyB,YAArB,GAAoC;AAClCf,EAAAA,KAAK,EAAE,SAAA;AAD2B,CAApC,CAAA;;;;;;;;;"}