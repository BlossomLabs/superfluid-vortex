{"version":3,"file":"LoadingRing.js","sources":["../../../../../src/components/LoadingRing/LoadingRing.js"],"sourcesContent":["import React, { useMemo, useState } from 'react'\nimport PropTypes from 'prop-types'\nimport { keyframes } from 'styled-components'\nimport { useInside } from 'use-inside'\nimport { useTheme } from '../../theme'\n\nconst spin = keyframes`\n  from {\n    transform: rotate(0deg);\n  }\n  to {\n    transform: rotate(360deg);\n  }\n`\n\nconst SIZE_SMALL = 14\nconst SIZE_MEDIUM = 24\n\nconst CONTAINER_SIZE_SMALL = 22\nconst CONTAINER_SIZE_MEDIUM = 24\n\nconst BORDER_WIDTH_STRONG = 2.5\nconst BORDER_WIDTH_MEDIUM = 1\n\nlet lastInstanceId = 1\n\nconst LoadingRing = React.memo(function LoadingRing({\n  paused,\n  mode: modeProp,\n  ...props\n}) {\n  const theme = useTheme()\n  const [instanceId] = useState(() => `sync-indicator-${lastInstanceId++}`)\n  const [insideFloatIndicator] = useInside('FloatIndicator')\n\n  const mode = modeProp || (insideFloatIndicator ? 'half-circle' : 'two-parts')\n\n  const containerSize =\n    mode === 'half-circle' ? CONTAINER_SIZE_MEDIUM : CONTAINER_SIZE_SMALL\n  const borderWidth =\n    mode === 'half-circle' ? BORDER_WIDTH_STRONG : BORDER_WIDTH_MEDIUM\n  const size = (mode === 'half-circle' ? SIZE_MEDIUM : SIZE_SMALL) - borderWidth\n\n  const [gapLength, dashLength] = useMemo(() => {\n    const length = Math.PI * size\n\n    // Both modes display a full circle when paused.\n    if (paused) {\n      return [0, length]\n    }\n\n    if (mode === 'two-parts') {\n      return [length / 4, length / 4]\n    }\n\n    // half-circle\n    return [length / 2, length / 2]\n  }, [mode, size, paused])\n\n  return (\n    <span\n      css={`\n        position: relative;\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        width: ${containerSize}px;\n        height: ${containerSize}px;\n      `}\n      {...props}\n    >\n      <svg\n        width={size + borderWidth}\n        height={size + borderWidth}\n        viewBox={`0 0 ${size + borderWidth} ${size + borderWidth}`}\n      >\n        <linearGradient\n          id={`${instanceId}-gradient`}\n          gradientTransform=\"rotate(90)\"\n        >\n          <stop offset=\"0%\" stopColor={theme.accentEnd} />\n          <stop offset=\"100%\" stopColor={theme.accentStart} />\n        </linearGradient>\n        {insideFloatIndicator && (\n          <circle\n            cx=\"50%\"\n            cy=\"50%\"\n            r={size / 2}\n            fill=\"transparent\"\n            stroke={theme.floatingContent.alpha(0.3)}\n            strokeWidth={borderWidth}\n          />\n        )}\n        <mask id={`${instanceId}-mask`}>\n          <circle\n            cx=\"50%\"\n            cy=\"50%\"\n            r={size / 2}\n            fill=\"transparent\"\n            stroke={`url(#${instanceId}-gradient)`}\n            strokeWidth={borderWidth}\n            strokeDasharray={`${dashLength} ${gapLength}`}\n            css={`\n              animation-duration: 1s;\n              animation-iteration-count: infinite;\n              animation-timing-function: linear;\n              animation-name: ${paused ? 'none' : spin};\n              transform-origin: 50% 50%;\n            `}\n          />\n        </mask>\n        <circle\n          cx=\"50%\"\n          cy=\"50%\"\n          r={size / 2 + borderWidth / 2}\n          fill={`url(#${instanceId}-gradient)`}\n          mask={`url(#${instanceId}-mask)`}\n        />\n      </svg>\n    </span>\n  )\n})\n\nLoadingRing.propTypes = {\n  mode: PropTypes.oneOf(['two-parts', 'half-circle']),\n  paused: PropTypes.bool,\n}\n\nLoadingRing.defaultProps = {\n  paused: false,\n}\n\nexport default LoadingRing\n"],"names":["spin","keyframes","SIZE_SMALL","SIZE_MEDIUM","CONTAINER_SIZE_SMALL","CONTAINER_SIZE_MEDIUM","BORDER_WIDTH_STRONG","BORDER_WIDTH_MEDIUM","lastInstanceId","LoadingRing","React","memo","paused","mode","modeProp","props","theme","useTheme","instanceId","useState","insideFloatIndicator","useInside","containerSize","borderWidth","size","gapLength","dashLength","useMemo","length","Math","PI","accentEnd","accentStart","floatingContent","alpha","propTypes","PropTypes","oneOf","bool","defaultProps"],"mappings":"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"}