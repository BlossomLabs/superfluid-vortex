{"version":3,"file":"ListView.js","sources":["../../../../../src/components/DataView/ListView.js"],"sourcesContent":["import React, { useCallback, useState } from 'react'\nimport PropTypes from 'prop-types'\nimport { Transition, animated } from '@react-spring/web'\nimport { GU, springs, textStyle } from '../../style'\nimport { useTheme } from '../../theme'\nimport Checkbox from '../Input/Checkbox'\nimport { ToggleButton } from './ToggleButton'\nimport { OpenedSurfaceBorder } from './OpenedSurfaceBorder'\n\nfunction ListView({\n  allSelected,\n  entries,\n  fields,\n  hasAnyExpansion,\n  onSelect,\n  onSelectAll,\n  renderSelectionCount,\n  selectable,\n  rowHeight,\n}) {\n  const theme = useTheme()\n\n  const [opened, setOpened] = useState(-1)\n\n  const toggleEntry = useCallback(index => {\n    setOpened(opened => (opened === index ? -1 : index))\n  }, [])\n\n  const sideSpace = selectable || hasAnyExpansion\n\n  return (\n    <React.Fragment>\n      {entries.map((entry, index) => {\n        const hasExpansion = entry.expansion.content.length > 0\n        return (\n          <div\n            key={index}\n            css={`\n              position: relative;\n              padding: 0;\n              padding-right: ${3 * GU}px;\n              padding-left: ${(sideSpace ? 6.5 : 3) * GU}px;\n              border-bottom: ${Number(index !== entries.length - 1)}px solid\n                ${theme.border};\n              transition: background 150ms ease-in-out;\n              background: ${entry.selected ? theme.surfaceSelected : 'none'};\n            `}\n          >\n            <OpenedSurfaceBorder opened={entry.index === opened} />\n            {sideSpace && (\n              <div\n                css={`\n                  position: absolute;\n                  top: ${1.5 * GU}px;\n                  left: 0;\n                  display: flex;\n                  justify-content: center;\n                  width: ${6.5 * GU}px;\n                `}\n              >\n                {selectable && (\n                  <Select\n                    index={entry.index}\n                    selected={entry.selected}\n                    onSelect={onSelect}\n                  />\n                )}\n                {!selectable && hasExpansion && (\n                  <ToggleButton\n                    opened={entry.index === opened}\n                    onClick={() => toggleEntry(entry.index)}\n                  />\n                )}\n              </div>\n            )}\n            {entry.actions && (\n              <div\n                css={`\n                  position: absolute;\n                  top: ${2 * GU}px;\n                  right: ${3 * GU}px;\n                `}\n              >\n                {entry.actions}\n              </div>\n            )}\n            <div>\n              {entry.entryNodes\n                .map((content, index) => [\n                  // field content\n                  content,\n                  // field label\n                  fields[index].label,\n                  // priority number\n                  (fields[index].priority && fields[index].priority) || 0,\n                ])\n                // sort by priority\n                .sort((a, b) => b[2] - a[2])\n                .map(([content, label], index, entryNodes) => (\n                  <div\n                    key={index}\n                    css={`\n                      display: flex;\n                      flex-direction: column;\n                      padding-bottom: ${index === entryNodes.length - 1\n                        ? 2 * GU\n                        : 0}px;\n                    `}\n                  >\n                    <div\n                      css={`\n                        display: flex;\n                        align-items: center;\n                        margin: ${2 * GU}px 0 ${1 * GU}px;\n                        color: ${theme.surfaceContentSecondary};\n                        ${textStyle('label2')};\n                      `}\n                    >\n                      {label}\n                    </div>\n\n                    <div>{content}</div>\n                  </div>\n                ))}\n            </div>\n            {hasExpansion && (\n              <EntryExpansion\n                expansion={entry.expansion}\n                opened={opened === entry.index}\n                rowHeight={rowHeight}\n              />\n            )}\n          </div>\n        )\n      })}\n    </React.Fragment>\n  )\n}\n\nListView.propTypes = {\n  allSelected: PropTypes.oneOf([-1, 0, 1]).isRequired,\n  entries: PropTypes.array.isRequired,\n  fields: PropTypes.array.isRequired,\n  hasAnyExpansion: PropTypes.bool.isRequired,\n  onSelect: PropTypes.func.isRequired,\n  onSelectAll: PropTypes.func.isRequired,\n  renderSelectionCount: PropTypes.func.isRequired,\n  rowHeight: PropTypes.number.isRequired,\n  selectable: PropTypes.bool.isRequired,\n}\n\n// Disable prop types check for internal components\n/* eslint-disable react/prop-types */\n\nfunction EntryExpansion({ expansion, opened, rowHeight }) {\n  const theme = useTheme()\n\n  // Handles the height of the expansion in free layout mode\n  const [freeLayoutContentHeight, setFreeLayoutContentHeight] = useState(0)\n\n  const handleFreeLayoutContentRef = useCallback(element => {\n    if (element) {\n      setFreeLayoutContentHeight(element.getBoundingClientRect().height)\n    }\n  }, [])\n\n  const height = expansion.freeLayout\n    ? freeLayoutContentHeight\n    : rowHeight * expansion.content.length\n\n  return (\n    <Transition\n      native\n      items={opened}\n      from={{ height: 0 }}\n      enter={{ height }}\n      update={{ height }}\n      leave={{ height: 0 }}\n      config={{ ...springs.smooth, precision: 0.1 }}\n    >\n      {({ height }, show) =>\n        show && (\n          <animated.div\n            css={`\n              overflow: hidden;\n              background: ${theme.surfaceUnder};\n              margin-left: ${-6.5 * GU}px;\n              margin-right: ${-3 * GU}px;\n              padding-left: ${6.5 * GU}px;\n              box-shadow: inset 0 6px 4px -4px rgba(0, 0, 0, 0.16);\n            `}\n            style={{\n              height: height.interpolate(v => `${v}px`),\n            }}\n          >\n            {expansion.content.map((child, i) => (\n              <div\n                key={i}\n                ref={expansion.freeLayout ? handleFreeLayoutContentRef : null}\n                css={`\n                  display: flex;\n                  align-items: center;\n                  height: ${expansion.freeLayout ? 'auto' : `${rowHeight}px`};\n                  padding-right: ${3 * GU}px;\n                `}\n              >\n                {child}\n              </div>\n            ))}\n          </animated.div>\n        )\n      }\n    </Transition>\n  )\n}\n\nfunction Select({ index, selected, onSelect }) {\n  const change = useCallback(\n    check => {\n      onSelect(index, check)\n    },\n    [index, onSelect]\n  )\n\n  return <Checkbox onChange={change} checked={selected} />\n}\n\n/* eslint-enable react/prop-types */\n\nexport { ListView }\n"],"names":["ListView","allSelected","entries","fields","hasAnyExpansion","onSelect","onSelectAll","renderSelectionCount","selectable","rowHeight","theme","useTheme","opened","setOpened","useState","toggleEntry","useCallback","index","sideSpace","React","map","entry","hasExpansion","expansion","content","length","GU","Number","border","selected","surfaceSelected","actions","entryNodes","label","priority","sort","a","b","surfaceContentSecondary","textStyle","propTypes","PropTypes","oneOf","isRequired","array","bool","func","number","EntryExpansion","freeLayoutContentHeight","setFreeLayoutContentHeight","handleFreeLayoutContentRef","element","getBoundingClientRect","height","freeLayout","springs","smooth","precision","show","interpolate","v","surfaceUnder","child","i","Select","change","check","Checkbox"],"mappings":"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"}