{"version":3,"file":"EmptyState.js","sources":["../../../../../src/components/DataView/EmptyState.js"],"sourcesContent":["import React, { useMemo } from 'react'\nimport PropTypes from 'prop-types'\nimport { useTheme } from '../../theme'\nimport { GU, textStyle } from '../../style'\nimport { usePublicUrl } from '../../providers/PublicUrl'\nimport LoadingRing from '../LoadingRing/LoadingRing'\nimport Link from '../Link/Link'\n\nimport illustrationRedImage from './assets/empty-state-illustration-red.png'\nimport illustrationBlueImage from './assets/empty-state-illustration-blue.png'\n\nfunction useEmptyStateParts(status, configurator, functionMode) {\n  const publicUrl = usePublicUrl()\n\n  const defaultConfigurator = useMemo(() => {\n    // eslint-disable-next-line react/prop-types\n    const Illustration = ({ path }) => (\n      <img src={publicUrl + path} alt=\"\" height={20 * GU} />\n    )\n    return {\n      default: {\n        displayLoader: false,\n        title: 'No data available.',\n        subtitle: null,\n        illustration: <Illustration path={illustrationBlueImage} />,\n        clearLabel: null,\n      },\n      loading: {\n        displayLoader: true,\n        title: 'Loading data…',\n        subtitle: null,\n        illustration: <Illustration path={illustrationBlueImage} />,\n        clearLabel: null,\n      },\n      'empty-filters': {\n        displayLoader: false,\n        title: 'No results found.',\n        subtitle: 'We can’t find any item matching your filter selection.',\n        illustration: <Illustration path={illustrationRedImage} />,\n        clearLabel: 'Clear filters',\n      },\n      'empty-search': {\n        displayLoader: false,\n        title: 'No results found.',\n        subtitle: 'We can’t find any item matching your search query.',\n        illustration: <Illustration path={illustrationRedImage} />,\n        clearLabel: 'Clear filters',\n      },\n    }\n  }, [publicUrl])\n\n  const parts = functionMode ? {} : configurator[status]\n\n  return {\n    ...defaultConfigurator[status],\n    ...parts,\n  }\n}\n\nfunction EmptyState({ status, configurator, onStatusEmptyClear }) {\n  const theme = useTheme()\n\n  const functionMode = typeof configurator === 'function'\n  const emptyState = useEmptyStateParts(status, configurator, functionMode)\n  const emptyStateOverride = functionMode ? configurator(status) : null\n\n  // Returning an element from the function mode overrides everything.\n  // If `null` or a non-element is returned, the default state is used instead.\n  if (React.isValidElement(emptyStateOverride)) {\n    return emptyStateOverride\n  }\n\n  return (\n    <section\n      css={`\n        display: flex;\n        justify-content: center;\n        align-items: center;\n      `}\n    >\n      <div\n        css={`\n          width: ${31 * GU}px;\n          padding: ${8 * GU}px 0;\n          text-align: center;\n        `}\n      >\n        {emptyState.illustration && (\n          <div\n            css={`\n              padding-bottom: ${2 * GU}px;\n            `}\n          >\n            {emptyState.illustration}\n          </div>\n        )}\n\n        {emptyState.title && (\n          <h1\n            css={`\n              ${textStyle('title2')};\n              display: flex;\n              align-items: center;\n              justify-content: center;\n            `}\n          >\n            {emptyState.displayLoader && (\n              <LoadingRing\n                css={`\n                  margin-right: ${1 * GU}px;\n                `}\n              />\n            )}\n            {emptyState.title}\n          </h1>\n        )}\n\n        {emptyState.subtitle && (\n          <div\n            css={`\n              color: ${theme.surfaceContentSecondary};\n            `}\n          >\n            {emptyState.subtitle}{' '}\n            {emptyState.clearLabel && (\n              <Link onClick={onStatusEmptyClear}>{emptyState.clearLabel}</Link>\n            )}\n          </div>\n        )}\n      </div>\n    </section>\n  )\n}\n\nEmptyState.propTypes = {\n  status: PropTypes.oneOf([\n    'default',\n    'empty-filters',\n    'empty-search',\n    'loading',\n  ]),\n  configurator: PropTypes.object,\n  onStatusEmptyClear: PropTypes.func,\n}\n\nexport default EmptyState\n"],"names":["useEmptyStateParts","status","configurator","functionMode","publicUrl","usePublicUrl","defaultConfigurator","useMemo","Illustration","path","React","GU","default","displayLoader","title","subtitle","illustration","illustrationBlueImage","clearLabel","loading","illustrationRedImage","parts","EmptyState","onStatusEmptyClear","theme","useTheme","emptyState","emptyStateOverride","isValidElement","textStyle","surfaceContentSecondary","propTypes","PropTypes","oneOf","object","func"],"mappings":"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"}