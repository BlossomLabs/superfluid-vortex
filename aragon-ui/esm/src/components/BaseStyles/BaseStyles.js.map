{"version":3,"file":"BaseStyles.js","sources":["../../../../../src/components/BaseStyles/BaseStyles.js"],"sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport { createGlobalStyle } from 'styled-components'\nimport { PublicUrl } from '../../providers/PublicUrl'\nimport { DEFAULT_FONT_FAMILY, MONOSPACE_FONT_FAMILY } from '../../utils'\nimport { textStyle } from '../../style'\nimport { useTheme } from '../../theme'\n\nimport overpassLightWoff2 from './assets/overpass/overpass-light.woff2'\nimport overpassRegularWoff2 from './assets/overpass/overpass-regular.woff2'\nimport overpassSemiBoldWoff2 from './assets/overpass/overpass-semibold.woff2'\nimport overpassMonoLightWoff2 from './assets/overpass-mono/overpass-mono-light.woff2'\n\nconst DEFAULT_FONTS = {\n  '400': { url: overpassLightWoff2, format: 'woff2' },\n  '600': { url: overpassRegularWoff2, format: 'woff2' },\n  '800': { url: overpassSemiBoldWoff2, format: 'woff2' },\n}\n\nconst MONOSPACE_FONTS = {\n  '400': { url: overpassMonoLightWoff2, format: 'woff2' },\n}\n\nfunction fontSrc(publicUrl, { url, format }) {\n  return `url(${publicUrl + url}) format('${format}')`\n}\n\nfunction fontFaceDeclarations({ fontFamily, publicUrl }) {\n  // No need to declare the font faces if the font family has changed.\n  if (fontFamily !== BaseStyles.defaultProps.fontFamily) {\n    return ''\n  }\n  return `\n    @font-face {\n      font-family: ${DEFAULT_FONT_FAMILY};\n      src: ${fontSrc(publicUrl, DEFAULT_FONTS['400'])};\n      font-weight: 400;\n      font-style: normal;\n    }\n    @font-face {\n      font-family: ${DEFAULT_FONT_FAMILY};\n      src: ${fontSrc(publicUrl, DEFAULT_FONTS['600'])};\n      font-weight: 600;\n      font-style: normal;\n    }\n    @font-face {\n      font-family: ${DEFAULT_FONT_FAMILY};\n      src: ${fontSrc(publicUrl, DEFAULT_FONTS['800'])};\n      font-weight: 800;\n      font-style: normal;\n    }\n    @font-face {\n      font-family: ${MONOSPACE_FONT_FAMILY};\n      src: ${fontSrc(publicUrl, MONOSPACE_FONTS['400'])};\n      font-weight: 400;\n      font-style: normal;\n    }\n  `\n}\n\nconst BaseStyles = React.memo(function BaseStyles(props) {\n  const theme = useTheme()\n  return (\n    <GlobalStyle\n      {...props}\n      theme={theme}\n      fontFaces={fontFaceDeclarations(props)}\n      textStyleCss={textStyle('body2')}\n    />\n  )\n})\n\nBaseStyles.propTypes = {\n  publicUrl: PropTypes.string,\n  fontFamily: PropTypes.string,\n}\n\nBaseStyles.defaultProps = {\n  publicUrl: '/',\n  fontFamily: `${DEFAULT_FONT_FAMILY}, sans-serif`,\n}\n\nconst GlobalStyle = createGlobalStyle`\n\n  // @font-face declarations\n  ${p => (p.fontFaces ? p.fontFaces : '')}\n\n  *, *:before, *:after {\n    box-sizing: border-box;\n  }\n  html {\n    -webkit-overflow-scrolling: touch;\n  }\n  body {\n    height: 0;\n    min-height: 100vh;\n    color: ${p => p.theme.content};\n    background: ${p => p.theme.background};\n    font-family: ${p => p.fontFamily};\n    ${p => p.textStyleCss};\n  }\n  html, body {\n    overflow: hidden;\n  }\n  body, ul, p, h1, h2, h3, h4, h5, h6 {\n    margin: 0;\n    padding: 0;\n  }\n  button, select, input, textarea, h1, h2, h3, h4, h5, h6 {\n    font-size: inherit;\n    font-family: inherit;\n    font-weight: inherit;\n    line-height: inherit;\n  }\n  a, button, select, input, textarea {\n    color: inherit;\n  }\n  strong, b {\n    font-weight: 600;\n  }\n  ::selection {\n    background: ${p => p.theme.selected};\n    color: ${p => p.theme.selectedContent};\n  }\n`\n\nexport default PublicUrl.hocWrap(BaseStyles)\n"],"names":["DEFAULT_FONTS","url","overpassLightWoff2","format","overpassRegularWoff2","overpassSemiBoldWoff2","MONOSPACE_FONTS","overpassMonoLightWoff2","fontSrc","publicUrl","fontFaceDeclarations","fontFamily","BaseStyles","defaultProps","DEFAULT_FONT_FAMILY","MONOSPACE_FONT_FAMILY","React","memo","props","theme","useTheme","textStyle","propTypes","PropTypes","string","GlobalStyle","createGlobalStyle","p","fontFaces","content","background","textStyleCss","selected","selectedContent","PublicUrl","hocWrap"],"mappings":"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"}