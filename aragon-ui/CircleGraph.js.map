{"version":3,"file":"CircleGraph.js","sources":["../src/components/CircleGraph/CircleGraph.js"],"sourcesContent":["import React, { useCallback } from 'react'\nimport PropTypes from 'prop-types'\nimport { Spring, animated } from '@react-spring/web'\nimport { useTheme } from '../../theme'\nimport { clamp, warnOnce } from '../../utils'\n\nconst STROKE_WIDTH = 4\nconst SIZE_DEFAULT = 80\n\nfunction labelDefault(animValue, value) {\n  const parts = {\n    suffix: '%',\n    value: String(Math.floor(animValue * 100)),\n  }\n\n  const animPercentage = animValue * 100\n  const percentage = value * 100\n\n  const lessThanOne =\n    percentage > 0 &&\n    percentage < 1 &&\n    animPercentage > 0 &&\n    // We know that the actual percentage is less than 1,\n    // so this is to avoid a jump with “1%” without prefix.\n    animPercentage < 2\n\n  return lessThanOne ? { ...parts, prefix: '<', value: '1' } : parts\n}\n\nfunction labelCompat(parts) {\n  if (\n    typeof parts === 'string' ||\n    typeof parts === 'number' ||\n    React.isValidElement(parts)\n  ) {\n    warnOnce(\n      'CircleGraph:label:string',\n      'CircleGraph: the function passed to the label should not ' +\n        'return a React node anymore: please check the CircleGraph documentation.'\n    )\n    return { value: String(parts) }\n  }\n  return parts\n}\n\nfunction CircleGraph({ color, label, size, strokeWidth, value }) {\n  const theme = useTheme()\n  const length = Math.PI * 2 * (size - strokeWidth)\n  const radius = (size - strokeWidth) / 2\n\n  if (label === undefined) {\n    label = labelDefault\n  }\n\n  const labelPart = useCallback(\n    name => animValue => {\n      if (typeof label !== 'function') {\n        return null\n      }\n\n      const cValue = clamp(animValue)\n      const parts = labelCompat(label(cValue, value))\n\n      return (\n        (parts[name] === undefined\n          ? labelDefault(cValue, value)[name]\n          : parts[name]) || ''\n      )\n    },\n    [label, value]\n  )\n\n  const colorFn =\n    typeof color === 'function' ? color : () => color || theme.accent\n\n  return (\n    <Spring to={{ progressValue: value }} native>\n      {({ progressValue }) => (\n        <div\n          css={`\n            position: relative;\n            display: flex;\n            align-items: center;\n            justify-content center;\n            width: ${size}px;\n            height: ${size}px;\n          `}\n        >\n          <svg\n            css={`\n              position: absolute;\n              top: 0;\n              left: 0;\n            `}\n            width={size}\n            height={size}\n            viewBox={`0 0 ${size} ${size}`}\n          >\n            <circle\n              cx={size / 2}\n              cy={size / 2}\n              r={radius}\n              style={{ strokeWidth }}\n              fill=\"none\"\n              stroke={theme.border}\n            />\n            <animated.circle\n              cx={size / 2}\n              cy={size / 2}\n              r={radius}\n              fill=\"none\"\n              strokeLinecap=\"round\"\n              strokeDasharray={length}\n              strokeWidth={strokeWidth}\n              style={{\n                stroke: progressValue.to(colorFn),\n                strokeDashoffset: progressValue.to(\n                  t => length - (length * t) / 2\n                ),\n              }}\n              css={`\n                transform: rotate(270deg);\n                transform-origin: 50% 50%;\n              `}\n            />\n          </svg>\n          <div\n            css={`\n              display: flex;\n              flex-direction: column;\n              justify-content: center;\n              align-items: center;\n              line-height: 1.2;\n            `}\n          >\n            {typeof label !== 'function'\n              ? label\n              : label && (\n                  <div\n                    css={`\n                      position: absolute;\n                      top: 50%;\n                      left: 0;\n                      right: 0;\n                      transform: translateY(-50%);\n                    `}\n                  >\n                    <div\n                      css={`\n                        display: flex;\n                        align-items: baseline;\n                        justify-content: center;\n                      `}\n                    >\n                      <animated.div style={{ fontSize: `${size * 0.2}px` }}>\n                        {progressValue.to(labelPart('prefix'))}\n                      </animated.div>\n                      <animated.div style={{ fontSize: `${size * 0.25}px` }}>\n                        {progressValue.to(labelPart('value'))}\n                      </animated.div>\n                      <animated.div\n                        css={`\n                          display: flex;\n                          color: ${theme.surfaceContentSecondary};\n                        `}\n                        style={{ fontSize: `${size * 0.13}px` }}\n                      >\n                        {progressValue.to(labelPart('suffix'))}\n                      </animated.div>\n                    </div>\n                    <animated.div\n                      css={`\n                        position: absolute;\n                        top: 100%;\n                        left: 0;\n                        right: 0;\n                        display: flex;\n                        justify-content: center;\n                        color: ${theme.surfaceContentSecondary};\n                      `}\n                      style={{ fontSize: `${size * 0.1}px` }}\n                    >\n                      {progressValue.to(labelPart('secondary'))}\n                    </animated.div>\n                  </div>\n                )}\n          </div>\n        </div>\n      )}\n    </Spring>\n  )\n}\n\nCircleGraph.propTypes = {\n  color: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n  label: PropTypes.oneOfType([PropTypes.node, PropTypes.func]),\n  size: PropTypes.number,\n  strokeWidth: PropTypes.number,\n  value: PropTypes.number.isRequired,\n}\n\nCircleGraph.defaultProps = {\n  size: SIZE_DEFAULT,\n  strokeWidth: STROKE_WIDTH,\n}\n\nexport default CircleGraph\n"],"names":["STROKE_WIDTH","SIZE_DEFAULT","labelDefault","animValue","value","parts","suffix","String","Math","floor","animPercentage","percentage","lessThanOne","prefix","labelCompat","React","isValidElement","warnOnce","CircleGraph","color","label","size","strokeWidth","theme","useTheme","length","PI","radius","undefined","labelPart","useCallback","name","cValue","clamp","colorFn","accent","Spring","progressValue","border","stroke","to","strokeDashoffset","t","animated","fontSize","surfaceContentSecondary","propTypes","PropTypes","oneOfType","func","string","node","number","isRequired","defaultProps"],"mappings":"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"}