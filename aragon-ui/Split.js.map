{"version":3,"file":"Split.js","sources":["../src/components/Split/Split.js"],"sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Inside } from 'use-inside'\nimport { useLayout } from '../Layout/Layout'\nimport { GU } from '../../style'\n\nfunction Split({ primary, secondary, invert }) {\n  const { name: layout } = useLayout()\n  const oneColumn = layout === 'small' || layout === 'medium'\n\n  const inverted =\n    (!oneColumn && invert === 'horizontal') ||\n    (oneColumn && invert === 'vertical')\n\n  const primaryContent = (\n    <Inside name=\"Split:primary\">\n      <div\n        css={`\n          flex-grow: 1;\n          margin-left: ${!oneColumn && inverted ? 2 * GU : 0}px;\n          padding-top: ${oneColumn && inverted ? 2 * GU : 0}px;\n        `}\n      >\n        {primary}\n      </div>\n    </Inside>\n  )\n\n  const secondaryContent = (\n    <Inside name=\"Split:secondary\">\n      <div\n        css={`\n          flex-shrink: 0;\n          flex-grow: 0;\n          width: ${oneColumn ? '100%' : `${33 * GU}px`};\n          margin-left: ${!oneColumn && !inverted ? 2 * GU : 0}px;\n          padding-top: ${oneColumn && !inverted ? 2 * GU : 0}px;\n        `}\n      >\n        {secondary}\n      </div>\n    </Inside>\n  )\n\n  return (\n    <Inside name=\"Split\">\n      <div\n        css={`\n          display: ${oneColumn ? 'block' : 'flex'};\n          padding-bottom: ${3 * GU}px;\n          width: 100%;\n        `}\n      >\n        {inverted ? secondaryContent : primaryContent}\n        {inverted ? primaryContent : secondaryContent}\n      </div>\n    </Inside>\n  )\n}\n\nSplit.propTypes = {\n  invert: PropTypes.oneOf(['none', 'horizontal', 'vertical']),\n  primary: PropTypes.node,\n  secondary: PropTypes.node,\n}\n\nSplit.defaultProps = {\n  invert: 'none',\n}\n\nexport { Split }\nexport default Split\n"],"names":["Split","primary","secondary","invert","name","layout","useLayout","oneColumn","inverted","primaryContent","React","Inside","GU","secondaryContent","propTypes","PropTypes","oneOf","node","defaultProps"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAMA,SAASA,KAAT,CAA+C,IAAA,EAAA;AAAA,EAAhC,IAAA;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,SAAX;AAAsBC,IAAAA,MAAAA;AAAtB,GAAgC,GAAA,IAAA,CAAA;AAC7C,EAAM,MAAA;AAAEC,IAAAA,IAAI,EAAEC,MAAAA;AAAR,GAAA,GAAmBC,gBAAS,EAAlC,CAAA;AACA,EAAMC,MAAAA,SAAS,GAAGF,MAAM,KAAK,OAAX,IAAsBA,MAAM,KAAK,QAAnD,CAAA;AAEA,EAAA,MAAMG,QAAQ,GACX,CAACD,SAAD,IAAcJ,MAAM,KAAK,YAA1B,IACCI,SAAS,IAAIJ,MAAM,KAAK,UAF3B,CAAA;AAIA,EAAMM,MAAAA,cAAc,gBAClBC,yBAAA,CAAA,aAAA,CAACC,oBAAD,EAAA;AAAQ,IAAA,IAAI,EAAC,eAAA;AAAb,GACE,eAAAD,yBAAA,CAAA,aAAA,CAAA,UAAA,EAAA;AAAA,IAGmB,KAAA,EAAA,CAACH,SAAD,IAAcC,QAAd,GAAyB,CAAII,GAAAA,YAA7B,GAAkC,CAHrD;AAAA,IAAA,MAAA,EAImBL,SAAS,IAAIC,QAAb,GAAwB,CAAA,GAAII,YAA5B,GAAiC,CAAA;AAJpD,GAOGX,EAAAA,OAPH,CADF,CADF,CAAA;AAcA,EAAMY,MAAAA,gBAAgB,gBACpBH,yBAAA,CAAA,aAAA,CAACC,oBAAD,EAAA;AAAQ,IAAA,IAAI,EAAC,iBAAA;AAAb,GACE,eAAAD,yBAAA,CAAA,aAAA,CAAA,WAAA,EAAA;AAAA,IAAA,MAAA,EAIaH,SAAS,GAAG,MAAH,GAAa,CAAE,EAAA,EAAA,GAAKK,YAAG,CAJ7C,EAAA,CAAA;AAAA,IAKmB,MAAA,EAAA,CAACL,SAAD,IAAc,CAACC,QAAf,GAA0B,CAAA,GAAII,YAA9B,GAAmC,CALtD;AAAA,IAAA,MAAA,EAMmBL,SAAS,IAAI,CAACC,QAAd,GAAyB,CAAA,GAAII,YAA7B,GAAkC,CAAA;AANrD,GASGV,EAAAA,SATH,CADF,CADF,CAAA;AAgBA,EAAA,oBACEQ,wCAACC,oBAAD,EAAA;AAAQ,IAAA,IAAI,EAAC,OAAA;AAAb,GACE,eAAAD,yBAAA,CAAA,aAAA,CAAA,WAAA,EAAA;AAAA,IAAA,MAAA,EAEeH,SAAS,GAAG,OAAH,GAAa,MAFrC;AAAA,IAAA,MAAA,EAGsB,CAAIK,GAAAA,YAAAA;AAH1B,GAAA,EAOGJ,QAAQ,GAAGK,gBAAH,GAAsBJ,cAPjC,EAQGD,QAAQ,GAAGC,cAAH,GAAoBI,gBAR/B,CADF,CADF,CAAA;AAcD,CAAA;;AAEDb,KAAK,CAACc,SAAN,GAAkB;AAChBX,EAAAA,MAAM,EAAEY,eAAS,CAACC,KAAV,CAAgB,CAAC,MAAD,EAAS,YAAT,EAAuB,UAAvB,CAAhB,CADQ;AAEhBf,EAAAA,OAAO,EAAEc,eAAS,CAACE,IAFH;AAGhBf,EAAAA,SAAS,EAAEa,eAAS,CAACE,IAAAA;AAHL,CAAlB,CAAA;AAMAjB,KAAK,CAACkB,YAAN,GAAqB;AACnBf,EAAAA,MAAM,EAAE,MAAA;AADW,CAArB,CAAA;;;;;;;;;;;;;;;;;;;;"}